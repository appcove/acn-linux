#!/usr/bin/python

import acnpython26



#TODO: look at Parser.destroy() to break cyclic memory references..  Perhaps destroy it before entering the main workers.

import sys
import os
from os import path
from optparse import OptionParser

Parser = OptionParser(usage="%prog")

# -----------------------------------------------------------------------------
# Global options

Parser.add_option("--DebugLevel",
    dest    = "DebugLevel",
    action  = "store",
    default = 0,
	type	= "int",
    help    = "Amount of debugging info [0-5]."
    )

Parser.add_option("--verbose",
    dest    = "Verbose",
    action  = "store_true",
    default = False,
    help    = "More verbose output."
    )

Parser.add_option("--InstancePath",
    dest    = "InstancePath",
    action  = "store",
    default = None,
    help    = "relative path to the WB4 Instance."
    )

Parser.add_option("--ProjectIdentifier",
    dest    = "ProjectIdentifier",
    action  = "store",
    default = None,
    help    = "The project identifier of the project to bind this worker to."
    )

Parser.add_option("--ConnectionID",
    dest    = "ConnectionID",
    action  = "store",
    default = None,
	type	= "int",
    help    = "The project identifier of the project to bind this worker to."
    )

Parser.add_option("--SocketFD",
    dest    = "SocketFD",
    action  = "store",
    default = None,
	type	= "int",
    help    = "The file descriptor to communicate to the server on."
    )

# Parse command line
Opt, Arg = Parser.parse_args()

# Validate options
if Opt.DebugLevel not in (0,1,2,3,4,5):
	Parser.error("Invalid --DebugLevel %s." % Opt.DebugLevel)

if Opt.InstancePath == None:
	Parser.error("--InstancePath is required")

if Opt.ProjectIdentifier == None:
	Parser.error("The --ProjectIdentifier option must be specified.\n")

if Opt.ConnectionID == None:
	Parser.error("The --ConnectionID option must be specified.\n")
	
if Opt.SocketFD == None:
	Parser.error("For --ProcessType=Worker, the --SocketFD option must be specified.\n")





import WB4
from WB4.AppServer import Worker

# Setup debug level
if Opt.DebugLevel:
	WB4.EnableDEBUG(Opt.DebugLevel)

# Get the pid
pid = os.getpid()

# Fire it up!
if DE:BUG(2, "Starting `Worker`: PID %s, ConnectionID %s, ProjectIdentifier %s, SocketFD %s" % (pid, Opt.ConnectionID, Opt.ProjectIdentifier, Opt.SocketFD))

oWorker = Worker.WorkerConnection(Opt.InstancePath, Opt.ProjectIdentifier, Opt.ConnectionID, Opt.SocketFD)
oWorker.Loop()

if DE:BUG(2, "Ending `Worker`: PID %s, %s" % (pid, oWorker))


