#!/usr/bin/python3
# vim:encoding=utf-8:ts=2:sw=2:expandtab

from acnpython32 import *
from getpass import getpass

try:
  print()
  if not exists('/etc/.git'):
    print('WARNING: /etc not tracked by .git. Please abort and run `acn-setup-etcgit`.')
    print()
  
  
  if GetInput_YesNo('Install {0} (DEF)? '.format(Config.MySQL.ServerPackage), Default='yes'):
    call(('yum', 'install', Config.MySQL.ServerPackage, Config.MySQL.ClientPackage))
    print('   ... done')
    print()

  if GetInput_YesNo('Setup mysql to start automatically (DEF)? ', Default='yes'):
    check_call(('chkconfig', Config.MySQL.ServiceName, 'on'))
    print('   ... done')
    print()
  

  while True:
    if GetInput_YesNo('Build/rebuild mysql configuration (DEF)? ', Default='yes'):
      try:
        
        print()
        print('---')
        print()
        max_connections = GetInput_Int('Max connections (DEF)? ', Default=100, MinValue=1, MaxValue=1000)

        print()
        print('---')
        print("innodb_buffer_pool_size should be up to 25% of ram.")
        print()
        innodb_buffer_pool_size = GetInput_Int('innodb_buffer_pool_size (MB as integer) (DEF)? ', Default=128, MinValue=1)

        print()
        print('---')
        print("key_buffer_size should be a bit less depending on workload.")
        print()
        key_buffer_size = GetInput_Int('key_buffer_size (MB as integer) (DEF)? ', Default=64, MinValue=1)

        print()
        print('--- WRITING my.cnf ---')
        data = ReadSystemFile('etc/my.cnf')
        data = data.replace('{max_connections}', str(max_connections))
        data = data.replace('{innodb_buffer_pool_size}', str(innodb_buffer_pool_size))
        data = data.replace('{key_buffer_size}', str(key_buffer_size))
        WriteSystemFile('etc/my.cnf', data)
        print('   ... done')
        print()
      
      except KeyboardInterrupt:
        print()
        print()
        continue
    break


  if GetInput_YesNo('Start mysql? (DEF)? ', Default='yes'):
    check_call(('service', Config.MySQL.ServiceName, 'restart'))
    print('   ... done')
    print()

  if GetInput_YesNo('Run mysql_secure_installation (DEF)? ', Default='yes'):
    call(('mysql_secure_installation'))
    print('   ... done')
    print()

 
  while True:
    if not GetInput_YesNo('Do you want to add a mysql superuser (DEF)? ', Default='yes'):
      break
    try:
      user = GetInput_Regex("Enter the username to add: ", Regex='^[a-zA-Z0-9_-]+$')

      while True:
        pass1 = getpass('Enter Password   : ')
        pass2 = getpass('Confirm Password : ')

        if pass1 != pass2:
          print("Passwords did not match!")
          continue
        if len(pass1) < 8:
          print("Password is too short!")
          continue
        if "'" in pass1:
          print("Please don't use `'` in your password.")
          continue
        break

        

      sql = "GRANT ALL PRIVILEGES ON *.* TO '{0}'@'%' IDENTIFIED BY '{1}' WITH GRANT OPTION;".format(user, pass1).encode('utf-8')
    
      print('Adding user... The next password prompt is for the mysql root user.')
      p = Popen(('mysql', '-u', 'root', '-p'), stdin=PIPE)
      p.communicate(sql)
      if p.returncode > 0:
        print()
        print('ERROR ADDING USER (see above)')
        print()
        continue
      print('   ... done')
      print()
    
    except KeyboardInterrupt:
      print()
      print()
      continue
    
  pass#while

  print()
  print()


except Exception as e:
  print()
  print()
  print('*** Fatal Error ***')
  print(e)
  print()
except KeyboardInterrupt:
  print()  
  print()
  print('*** User Abort ***')
  print()
